{"version":3,"sources":["components/controls/ControlsStyled.js","components/controls/Controls.js","components/statistic/StatisticStyled.js","components/statistic/Statistic.js","components/App.js","index.js"],"names":["ControlsStyled","styled","div","Controls","onClickAction","className","type","name","onClick","StatisticStyled","Statistic","good","neutral","negative","total","percent","App","state","adding","e","target","setState","prevState","Math","floor","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QACaA,EAAiBC,IAAOC,IAAV,yF,OC0CZC,EAtCE,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAClB,OACE,eAACJ,EAAD,WACE,oBAAIK,UAAU,QAAd,mCACA,qBAAIA,UAAU,UAAd,UACE,wBACEC,KAAK,SACLC,KAAK,OACLF,UAAU,UACVG,QAASJ,EAJX,kBAQA,wBACEE,KAAK,SACLC,KAAK,UACLF,UAAU,aACVG,QAASJ,EAJX,qBAQA,wBACEE,KAAK,SACLC,KAAK,WACLF,UAAU,SACVG,QAASJ,EAJX,wBCzBKK,EAAkBR,IAAOC,IAAV,yFC8BbQ,EA3BG,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACnD,OACE,eAACN,EAAD,WACE,oBAAIJ,UAAU,QAAd,uBACa,IAAZU,EACC,kDAEA,+BACE,6CAAcJ,KACd,gDAAiBC,KACjB,iDAAkBC,KAClB,8CAAeC,KACf,2DAA4BC,EAA5B,cCXJC,E,4MACJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,SAAU,G,EAoBZK,OAAS,SAACC,GAER,IAAQZ,EAASY,EAAEC,OAAXb,KACR,EAAKc,UAAS,SAACC,GAAe,IAAD,EAC3B,OAAO,EAAP,iBACGf,EAAQe,EAAUf,IAAS,GAD9B,sBAES,EAAKU,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,UAF3D,wBAGWU,KAAKC,MACX,EAAKP,MAAMN,MACT,EAAKM,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,UACnD,MANN,M,4CAYJ,WACE,MAA4DY,KAAKR,MAAzDN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,SAAvB,IAAiCC,aAAjC,MAAyC,EAAzC,MAA4CC,eAA5C,MAAsD,EAAtD,EACA,OACE,qCACE,cAAC,EAAD,CAAUX,cAAeqB,KAAKP,SAC9B,cAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,SAAUA,EACVC,MAAOA,EACPC,QAASA,W,GAlDDW,aAyDHV,ICxDfW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3842107d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nexport const ControlsStyled = styled.div`\r\n  margin-left: 30px;\r\n  .title {\r\n    font-size: 50px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ControlsStyled } from \"./ControlsStyled\";\r\n\r\nconst Controls = ({ onClickAction }) => {\r\n  return (\r\n    <ControlsStyled>\r\n      <h1 className=\"title\">Please leave feedback</h1>\r\n      <ul className=\"bt-list\">\r\n        <button\r\n          type=\"button\"\r\n          name=\"good\"\r\n          className=\"bt-good\"\r\n          onClick={onClickAction}\r\n        >\r\n          good\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          name=\"neutral\"\r\n          className=\"bt-neutral\"\r\n          onClick={onClickAction}\r\n        >\r\n          neutral\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          name=\"negative\"\r\n          className=\"bt-bad\"\r\n          onClick={onClickAction}\r\n        >\r\n          bad\r\n        </button>\r\n      </ul>\r\n    </ControlsStyled>\r\n  );\r\n};\r\n\r\nControls.propTypes = {\r\n  onClickFunc: PropTypes.func,\r\n};\r\n\r\nexport default Controls;\r\n","import styled from \"styled-components\";\r\nexport const StatisticStyled = styled.div`\r\n  margin-left: 30px;\r\n  .title {\r\n    font-size: 50px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { StatisticStyled } from \"./StatisticStyled\";\r\n\r\nconst Statistic = ({ good, neutral, negative, total, percent }) => {\r\n  return (\r\n    <StatisticStyled>\r\n      <h1 className=\"title\">Statistic</h1>\r\n      {percent === 0 ? (\r\n        <p>No feedback given</p>\r\n      ) : (\r\n        <ul>\r\n          <li>{`Good: ${good}`}</li>\r\n          <li>{`Neutral :${neutral}`}</li>\r\n          <li>{`negative: ${negative}`}</li>\r\n          <li>{`Total: ${total}`}</li>\r\n          <li>{`Possitive Feedback: ${percent}%`}</li>\r\n        </ul>\r\n      )}\r\n    </StatisticStyled>\r\n  );\r\n};\r\n\r\nStatistic.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  negative: PropTypes.number,\r\n  total: PropTypes.number,\r\n  percent: PropTypes.number,\r\n};\r\n\r\nexport default Statistic;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Controls from \"./controls/Controls\";\r\nimport Statistic from \"./statistic/Statistic\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    negative: 0,\r\n  };\r\n\r\n  // increment = (buttonName) => {\r\n  //   this.setState((prevState) => {\r\n  //     return { [buttonName]: prevState[buttonName] + 1 };\r\n  //   });\r\n  // };\r\n\r\n  // countTotalFeedback = (state) => {\r\n  //   const sum = this.good + this.neutral + this.negative;\r\n  //   return { sum };\r\n  // };\r\n\r\n  // countPositiveFeedbackPercentage = (state) => {\r\n  //   this.setState((prevState) => {\r\n  //     return {};\r\n  //   });\r\n  // };\r\n\r\n  adding = (e) => {\r\n    // console.log(e.target);\r\n    const { name } = e.target;\r\n    this.setState((prevState) => {\r\n      return {\r\n        [name]: (prevState[name] += 1),\r\n        total: this.state.good + this.state.neutral + this.state.negative,\r\n        percent: Math.floor(\r\n          (this.state.good /\r\n            (this.state.good + this.state.neutral + this.state.negative)) *\r\n            100\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, negative, total = 0, percent = 0 } = this.state;\r\n    return (\r\n      <>\r\n        <Controls onClickAction={this.adding} />\r\n        <Statistic\r\n          good={good}\r\n          neutral={neutral}\r\n          negative={negative}\r\n          total={total}\r\n          percent={percent}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"node_modules/modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}